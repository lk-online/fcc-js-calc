{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Key","props","id","onClick","val","Calculator","this","renderKeys","React","Component","arr","str","App","updateDisplay","bind","handleClick","calc","i","dis","document","querySelector","toString","replaceAll","innerHTML","sliceIndAdd","lastIndexOf","sliceIndSub","sliceIndMul","sliceIndDiv","sliceInd","Math","max","sub","slice","test","push","includes","length","pop","splice","result","Function","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ad297b1.chunk.js","sourcesContent":["import \"./App.css\";\nimport React from \"react\";\n//import ReactFCCtest from \"react-fcctest\";\n\nfunction Key(props) {\n  return (\n    <button id={props.id} onClick={props.onClick}>\n      {props.val}\n    </button>\n  );\n}\n\nclass Calculator extends React.Component {\n  renderKeys(id, val) {\n    return <Key id={id} val={val} onClick={() => this.props.onClick(val)} />;\n  }\n  render() {\n    return (\n      <div id=\"keys\">\n        <div id=\"first-row\">\n          {this.renderKeys(\"clear\", \"AC\")}\n          {this.renderKeys(\"divide\", \"/\")}\n          {this.renderKeys(\"multiply\", \"*\")}\n        </div>\n        <div id=\"second-row\">\n          {this.renderKeys(\"seven\", \"7\")}\n          {this.renderKeys(\"eight\", \"8\")}\n          {this.renderKeys(\"nine\", \"9\")}\n          {this.renderKeys(\"subtract\", \"-\")}\n        </div>\n        <div id=\"third-row\">\n          {this.renderKeys(\"four\", \"4\")}\n          {this.renderKeys(\"five\", \"5\")}\n          {this.renderKeys(\"six\", \"6\")}\n          {this.renderKeys(\"add\", \"+\")}\n        </div>\n        <div id=\"forth-row\">\n          {this.renderKeys(\"one\", \"1\")}\n          {this.renderKeys(\"two\", \"2\")}\n          {this.renderKeys(\"three\", \"3\")}\n          {this.renderKeys(\"equals\", \"=\")}\n        </div>\n        <div id=\"fifth-row\">\n          {this.renderKeys(\"zero\", \"0\")}\n          {this.renderKeys(\"decimal\", \".\")}\n        </div>\n      </div>\n    );\n  }\n}\n\nlet arr = [];\nlet str = \"\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.calc = this.calc.bind(this);\n  }\n  updateDisplay(i) {\n    let dis = document.querySelector(\"#display\");\n    if (typeof i !== \"string\") {\n      str = i.toString().replaceAll(\",\", \"\");\n    } else if (typeof i === \"number\") {\n      str = i;\n    }\n    dis.innerHTML = str;\n  }\n  handleClick(val) {\n    let sliceIndAdd = arr.lastIndexOf(\"+\");\n    let sliceIndSub = arr.lastIndexOf(\"-\");\n    let sliceIndMul = arr.lastIndexOf(\"*\");\n    let sliceIndDiv = arr.lastIndexOf(\"/\");\n    let sliceInd = Math.max(sliceIndAdd, sliceIndSub, sliceIndMul, sliceIndDiv) + 1;\n    let sub = arr.slice(sliceInd);\n    switch (val) {\n      case \"0\":\n        const regex = /\\d.|[1-9]+/g;\n        const regexTest = regex.test(sub);\n        switch (true) {\n          case regexTest:\n            arr.push(val);\n            this.updateDisplay(arr);\n            break;\n          default:\n        }\n        break;\n      case \"1\":\n      case \"2\":\n      case \"3\":\n      case \"4\":\n      case \"5\":\n      case \"6\":\n      case \"7\":\n      case \"8\":\n      case \"9\":\n        switch (true) {\n          case arr[0] === 0 && arr[1] !== \".\":\n            arr = [val];\n            break;\n          default:\n            arr.push(val);\n            break;\n        }\n        this.updateDisplay(arr);\n        break;\n      case \".\":\n        switch (true) {\n          case sub.includes(\".\"):\n            break;\n          default:\n            arr.push(val);\n            this.updateDisplay(arr);\n        }\n        break;\n      case \"+\":\n      case \"-\":\n      case \"*\":\n      case \"/\":\n        if (\n          (arr[arr.length - 1] === \"*\" ||\n            arr[arr.length - 1] === \"/\" ||\n            arr[arr.length - 1] === \"+\" ||\n            arr[arr.length - 1] === \"-\") &&\n          (arr[arr.length - 2] === \"*\" ||\n            arr[arr.length - 2] === \"/\" ||\n            arr[arr.length - 2] === \"+\" ||\n            arr[arr.length - 2] === \"-\")\n        ) {\n          arr.splice(-2);\n          arr.push(val);\n        } else if (\n          ((arr[arr.length - 1] === \"*\" ||\n            arr[arr.length - 1] === \"/\" ||\n            arr[arr.length - 1] === \"+\" ||\n            arr[arr.length - 1] === \"-\") &&\n            val !== \"-\") ||\n          (arr[arr.length - 1] === \"-\" && val === \"-\")\n        ) {\n          arr.pop();\n          arr.push(val);\n        } else {\n          arr.push(val);\n        }\n        this.updateDisplay(arr);\n        break;\n      case \"=\":\n        this.calc(arr);\n        break;\n      case \"AC\":\n        arr = [0];\n        this.updateDisplay(arr);\n        break;\n      default:\n        break;\n    }\n  }\n  calc(i) {\n    if (i.length > 0) {\n      // alternative to eval() to prevent js injection security issues, DONOT use eval() even if it is strictly client-side\n      str = i.toString().replaceAll(\",\", \"\");\n      // eslint-disable-next-line no-new-func\n      let result = Function('\"use strict\";return (' + str + \")\")();\n      arr = [result];\n      this.updateDisplay(result);\n    }\n  }\n\n  componentDidMount() {\n    arr = [0];\n    this.updateDisplay(arr);\n  }\n\n  render() {\n    return (\n      <div id=\"calc\">\n        {/*<ReactFCCtest />*/}\n        <div id=\"display\"></div>\n        <Calculator onClick={this.handleClick} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}